
 ./setup.bash
Name for your plugin, starting with `asdf-`, eg. `asdf-foo`
> asdf-openssl

Shell command for testing correct tool installation. eg. `foo --version` or `foo --help`
[openssl --help] > openssl --version

Your GitHub username
> VadimDor

Your name
[Vadim Dor] >

The tool's GitHub homepage.
[https://github.com/VadimDor/openssl] >

The tool's documentation homepage if necessary.
[https://github.com/VadimDor/openssl] >

Please choose a LICENSE keyword.
See available license keywords at
https://help.github.com/en/github/creating-cloning-and-archiving-repositories/licensing-a-repository#searching-github-by-license-type
License keyword:
MIT/APACHE-2.0/MPL-2.0/AGPL-3.0 > MIT

Setting up plugin: asdf-openssl

author:        Vadim Dor
plugin repo:   https://github.com/VadimDor/asdf-openssl
license:       https://choosealicense.com/licenses/mit/


openssl github:   https://github.com/VadimDor/openssl
openssl docs:     https://github.com/VadimDor/openssl
openssl test:     `openssl --version`

After confirmation, the `main` will be replaced with the generated
template using the above information. Please ensure all seems correct.
Type `yes` if you want to continue.
> yes

Switched to branch 'template'
Preparing worktree (detached HEAD 2896ab4)
HEAD is now at 2896ab4 Initial commit
Switched to a new branch 'out'
rm '.gitlab-ci.yml'
rm '.gitlab/issue_templates/Bug_Report.md'
rm '.gitlab/issue_templates/Feature_Request.md'
rm '.gitlab/merge_request_templates/Merge_Request.md'
rm 'README-gitlab.md'
rm 'contributing-gitlab.md'
[out (root-commit) a0844cf] Generate asdf-openssl plugin from template.
 21 files changed, 442 insertions(+)
 create mode 100644 .editorconfig
 create mode 100644 .github/ISSUE_TEMPLATE/bug_report.md
 create mode 100644 .github/ISSUE_TEMPLATE/feature_request.md
 create mode 100644 .github/PULL_REQUEST/pull_request_template.md
 create mode 100644 .github/dependabot.yml
 create mode 100644 .github/workflows/build.yml
 create mode 100644 .github/workflows/lint.yml
 create mode 100644 .github/workflows/release.yml
 create mode 100644 .github/workflows/semantic-pr.yml
 create mode 100644 .tool-versions
 create mode 100644 LICENSE
 create mode 100644 README.md
 create mode 100755 bin/download
 create mode 100755 bin/install
 create mode 100755 bin/latest-stable
 create mode 100755 bin/list-all
 create mode 100644 contributing.md
 create mode 100644 lib/utils.bash
 create mode 100755 scripts/format.bash
 create mode 100755 scripts/lint.bash
 create mode 100644 version.txt
Switched to branch 'main'
Your branch and 'origin/main' have diverged,
and have 1 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)
All done.
Your main branch has been reset to an initial commit.
Push to origin/main with `git push --force-with-lease`
Review these TODO items:
LICENSE:1:TODO: INSERT YOUR NAME  COPYRIGHT YEAR (if applicable to your license)
LICENSE-2-
LICENSE-3-MIT License
LICENSE-4-
--
README.md-15-
README.md-16-# Dependencies
README.md-17-
README.md:18:**TODO: adapt this section**
README.md-19-
README.md-20-- `bash`, `curl`, `tar`: generic POSIX utilities.
README.md-21-- `SOME_ENV_VAR`: set this environment variable in your shell config to load the correct version of tool x.
--
bin/download-10-
bin/download-11-mkdir -p "$ASDF_DOWNLOAD_PATH"
bin/download-12-
bin/download:13:# TODO: Adapt this to proper extension and adapt extracting strategy.
bin/download-14-release_file="$ASDF_DOWNLOAD_PATH/$TOOL_NAME-$ASDF_INSTALL_VERSION.tar.gz"
bin/download-15-
bin/download-16-# Download tar.gz file to the download directory
--
contributing.md-5-```shell
contributing.md-6-asdf plugin test <plugin-name> <plugin-url> [--asdf-tool-version <version>] [--asdf-plugin-gitref <git-ref>] [test-command*]
contributing.md-7-
contributing.md:8:# TODO: adapt this
contributing.md-9-asdf plugin test openssl https://github.com/VadimDor/asdf-openssl.git "openssl --version"
contributing.md-10-```
contributing.md-11-
--
lib/utils.bash-2-
lib/utils.bash-3-set -euo pipefail
lib/utils.bash-4-
lib/utils.bash:5:# TODO: Ensure this is the correct GitHub homepage where releases can be downloaded for openssl.
lib/utils.bash-6-GH_REPO="https://github.com/VadimDor/openssl"
lib/utils.bash-7-TOOL_NAME="openssl"
lib/utils.bash-8-TOOL_TEST="openssl --version"
--
lib/utils.bash-31-}
lib/utils.bash-32-
lib/utils.bash-33-list_all_versions() {
lib/utils.bash:34:      # TODO: Adapt this. By default we simply list the tag names from GitHub releases.
lib/utils.bash-35-      # Change this function if openssl has other means of determining installable versions.
lib/utils.bash-36-      list_github_tags
lib/utils.bash-37-}
--
lib/utils.bash-41-      version="$1"
lib/utils.bash-42-      filename="$2"
lib/utils.bash-43-
lib/utils.bash:44:      # TODO: Adapt the release URL convention for openssl
lib/utils.bash-45-      url="$GH_REPO/archive/v${version}.tar.gz"
lib/utils.bash-46-
lib/utils.bash-47-      echo "* Downloading $TOOL_NAME release $version..."
--
lib/utils.bash-61-              mkdir -p "$install_path"
lib/utils.bash-62-              cp -r "$ASDF_DOWNLOAD_PATH"/* "$install_path"
lib/utils.bash-63-
lib/utils.bash:64:              # TODO: Assert openssl executable exists.
lib/utils.bash-65-              local tool_cmd
lib/utils.bash-66-              tool_cmd="$(echo "$TOOL_TEST" | cut -d' ' -f1)"
lib/utils.bash-67-              test -x "$install_path/$tool_cmd" || fail "Expected $install_path/$tool_cmd to be executable."
(END)